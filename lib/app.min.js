var app = angular.module("playbillApp", ['ngRoute', 'ui.bootstrap']);

app.run(function($rootScope, UserService, PlaybillsService) {
  UserService.current_user().then(function(data) {
    $rootScope.user = data;
  }).catch(function(err) {
    $rootScope.error = err;
  });

  PlaybillsService.count().then(function(data) {
    $rootScope.count = data;
  });

  $rootScope.show = {};
});

var app = angular.module("playbillApp");

app.directive("castshow", function() {
  return {
    restrict: "E",
    templateUrl: "/views/cast_show.html",
    link: function($scope, element, attrs) {
      $scope.emptyCast = function() {
        return $scope.show.cast && $scope.show.cast.length === 0;
      };
    }
  };
});

app.directive("castform", function() {
  return {
    restrict: "E",
    templateUrl: "/views/cast_form.html",
    link: function($scope, element, attrs) {
      $scope.addNewActor = function() {
        var itemNo = $scope.show.cast.length;
        $scope.show.cast.push({'name': '' , 'index': itemNo});
      };

      $scope.removeActor = function(index) {
        $scope.show.cast.splice(index, 1);
      };
    }
  };
});

var app = angular.module("playbillApp");

app.directive("comments", function() {
  return {
    restrict: "E",
    templateUrl: "/views/comments_form.html",
    controller: "CommentsController"
  };
});

app.controller('CommentsController', ['$rootScope', '$scope', '$http', '$routeParams',
  function($rootScope, $scope, $http, $routeParams){

    var commentsUrl = '/post_comments/' + $routeParams.postId;
    $http.get(commentsUrl).
      success(function(data) {
        $scope.comments = data;
      }).
      error(function(data, status, headers, config) {
        $scope.comments = {};
      });

    $scope.addComment = function(text) {
      var postId = $rootScope.show._id,
          postComment = {
            postId: postId,
            content: text,
            userId: $rootScope.user._id,
            username: $rootScope.user.username,
            submitted: new Date().getTime()
          };

      var commentUrl = '/post/' + postId + "/new_comment";
      $http.post(commentUrl, postComment)
        .success(function(err, res) {
          $scope.comments.push(postComment);
          $scope.comment = null;
        });
    };

  }

]);
var app = angular.module("playbillApp");

app.directive("imageupload", function() {
  return {
    restrict: "E",
    templateUrl: "/views/image_upload_form.html",
    link: function($scope, element, attrs) {
      $scope.s3Upload = function(stuff){
        var status_elem = document.getElementById("status");
        var preview_elem = document.getElementById("preview");
        var s3upload = new S3Upload({
            s3_object_name: showImageIdentifier(),
            file_dom_selector: 'image',
            s3_sign_put_url: '/sign_s3',
            onProgress: function(percent, message) {
              status_elem.innerHTML = 'Upload progress: ' + percent + '% ' + message;
            },
            onFinishS3Put: function(public_url) {
              $scope.show.imageUrl = public_url;
              status_elem.innerHTML = 'Upload completed.';
              preview_elem.innerHTML = '<img class="playbill-image" src="'+ public_url +'" />';
            },
            onError: function(status) {
              status_elem.innerHTML = 'Upload error: ' + status;
            }
        });
      };

      function showImageIdentifier() {
        var showTitle = $scope.show.title;
        if(showTitle) {
          showTitle = showTitle.replace(/[^\w\s]|_/g, " ") .replace(/\s+/g, "_");
        }
        var dateId = Date.now().toString();
        return [dateId, showTitle].join('_');
      }
    }
  };
});
var app = angular.module("playbillApp");

app.directive("postdetails", function() {
  return {
    restrict: "E",
    templateUrl: "/views/post_details.html",
    controller: "PostController"
  };
});

app.directive("postunit", function() {
  return {
    restrict: "E",
    templateUrl: "/views/post_unit.html",
    controller: "PostController"
  };
});

app.directive("postform", function() {
  return {
    restrict: "E",
    templateUrl: "/views/post_form.html",
    controller: "PostController"
  };
});

app.controller('AllPlaybillsController', ['$scope', 'PlaybillsService',
  function($scope, PlaybillsService) {
    PlaybillsService.list().then(function(data) {
      $scope.playbills = data;
    });
  }
]);

app.controller('PostController', ['$rootScope', '$scope', '$routeParams', '$http', '$location', 'PlaybillsService',
  function($rootScope, $scope, $routeParams, $http, $location, PlaybillsService) {

    var showId = $routeParams.postId;
    if(showId) {
      PlaybillsService.show(showId).then(function(data) {
        $rootScope.show = data[0];
        if (!$rootScope.show.cast   ) { $rootScope.show.cast    = []; }
        if (!$rootScope.show.ratings) { $rootScope.show.ratings = {}; }
      });
    } else {
      $rootScope.show = { cast: [], rating: 0, ratings: {} };
    }

    $scope.addPlaybill = function(show) {
      PlaybillsService.newShow(show).then(function(data) {
        $location.path('/');
      });
    };

    $scope.toggleEditing = function() {
      $scope.editing = !$scope.editing;
    };

    $scope.editPlaybill = function(show) {
      show.rating = averageRating(show.ratings);
      PlaybillsService.editShow(show).then(function(data) {
        $scope.toggleEditing();
      });
    };

    var averageRating = function(allRatings) {
      var userCount = 0,
          userRating = 0;

      for (var k in allRatings){
        userCount += 1;
        userRating += allRatings[k];
      }

      return Math.ceil(userRating / userCount);
    };

    $scope.deleteShow = function(show) {
      PlaybillsService.deleteShow(show).then(function(data) {
        $location.path('/');
      });
    };

    $scope.ratingsCount = function() {
      return $rootScope.show.ratings ? Object.keys($rootScope.show.ratings).length : 0;
    };
  }
]);

var app = angular.module("playbillApp");

app.factory("PlaybillsService", function($http) {
  return {
    list: function() {
      return $http.get('/playbills').then(function(result) {
        return result.data;
      });
    },
    count: function() {
      return $http.get('/playbill_count').then(function(result) {
        return result.data;
      });
    },
    show: function(showId) {
      return $http.get('playbill/' + showId).then(function(result) {
        return result.data;
      });
    },
    newShow: function(show) {
      return $http.post('/new_post', show).then(function(result) {
        return result.data;
      });
    },
    editShow: function(show) {
      return $http.post('/edit_post', show).then(function(result) {
        return result.data;
      });
    },
    deleteShow: function(show) {
      return $http.post('/delete_post', show).then(function(result) {
        return result.data;
      });
    }
  };
});


var app = angular.module("playbillApp");

app.directive('starRating', function () {
    return {
      restrict: 'E',
      template: '<ul class="rating">' +
                  '<li ng-repeat="star in stars" ng-class="star" ng-click="toggle($index)">' +
                    '\u2605' +
                  '</li>' +
                '</ul>',
      scope: {
        ratingValue: '=',
        readonly: '@',
        onRatingSelected: '&',
        show: '='
      },
      link: function (scope, elem, attrs) {
        var numberOfStars = 5;

        var updateStars = function() {
          scope.stars = [];
          for (var  i = 0; i < numberOfStars; i++) {
            scope.stars.push({yellow: i < scope.ratingValue});
          }
        };

        var updateRatings = function() {
          var username = scope.$root.user.username;
          scope.show.ratings[username] = scope.ratingValue;
        };

        scope.toggle = function(index) {
          if (scope.readonly && scope.readonly === 'true') {
            return;
          }
          scope.ratingValue = index + 1;
          scope.onRatingSelected({rating: index + 1});
        };

        scope.$watch('show', function(newVal, oldVal) {
          if (newVal) {
            updateStars();
          }
        });

        scope.$watch('ratingValue', function(newVal, oldVal) {
          if (newVal) {
            updateStars();
            updateRatings();
          }
        });
      }
    };
  });
var app = angular.module("playbillApp");

app.config(['$routeProvider', '$locationProvider',
  function($routeProvider, $locationProvider) {
    $locationProvider.html5Mode({
      enabled: true,
      requireBase: false
    });
    $routeProvider.
      when('/post/:postId', {
        templateUrl: '/views/post_show.html',
        controller: 'PostController'
      }).
      when('/add_post', {
        templateUrl: '/views/post_new.html',
        controller: 'PostController'
      }).
      when('/signin', {
        templateUrl: '/views/signin.html'
      }).
      when('/signup', {
        templateUrl: '/views/signup.html'
      }).
      when('/logout', {
        templateUrl: '/views/signin.html',
        controller: function() {
          window.location.reload();
        }
      }).
      when('/', {
        templateUrl: 'views/index.html',
        controller: 'AllPlaybillsController'
      });
  }
]);
var app = angular.module("playbillApp");

app.factory('UserService', function($http) {
  return {
    current_user: function() {
      return $http.get('/user/profile').then(function(result) {
        return result.data;
      });
    }
  };
});
